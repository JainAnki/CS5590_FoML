# -*- coding: utf-8 -*-
"""5a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D4DPdEI9efsHtX_NJDxwbMtEnnnllkUx

#Installing pandas-profiling library
"""

! pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip

"""#Importing Libraries"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import pandas_profiling as pp

"""#Reading the "loan_train.csv" file
###1.   Read .csv file
###2.   Print the info of the dataframe
###3.   Print the top 5 rows of the dataframe


"""

df = pd.read_csv('/content/loan_train.csv', low_memory=False)
df = df[(df['loan_status'] == 'Fully Paid') | (df['loan_status'] == 'Charged Off')]
print("df.info()")
print(df.info())
print("\n")
print("df.head()")
print(df.head())
print("\n")
print(df.shape)

"""#Creating and saving the ProfileReport of the **original** dataframe 


"""

profile = pp.ProfileReport(df, title = 'Loan_dataset', html = {'style': {'full_width': True}})
profile.to_notebook_iframe()
profile.to_file(output_file = 'Loan_dataset.html')

"""#Reading the "loan_train.csv" file
###1.   Read .csv file to perform exploratory data analysis (EDA)
###2.   From the ProfileReport it was seen that a number of attributes had


*   only NaN values
*   a single value for all the data observations
  ### So we remove these attributes from the dataframe



"""

df_re = pd.read_csv('/content/loan_train.csv', low_memory=False)
df_re = df_re[(df_re['loan_status'] == 'Fully Paid') | (df_re['loan_status'] == 'Charged Off')]
mapping_dict = {'loan_status':{'Fully Paid':1,'Charged Off': 0}}
df_re = df_re.replace(mapping_dict)
df_re.loan_status.value_counts()
df_re = df_re.drop(['next_pymnt_d','id','member_id','pymnt_plan','url','initial_list_status','mths_since_last_major_derog','policy_code','application_type','annual_inc_joint','dti_joint','verification_status_joint','acc_now_delinq','tot_coll_amt','tot_cur_bal','open_acc_6m','open_il_6m','open_il_12m', 'open_il_24m', 'mths_since_rcnt_il', 'total_bal_il','il_util',	'open_rv_12m','open_rv_24m','max_bal_bc','all_util','total_rev_hi_lim', 'inq_fi','total_cu_tl','inq_last_12m','acc_open_past_24mths','avg_cur_bal','bc_open_to_buy','bc_util','delinq_amnt','mo_sin_old_il_acct','mo_sin_old_rev_tl_op','mo_sin_rcnt_rev_tl_op','mo_sin_rcnt_tl','mort_acc','mths_since_recent_bc','mths_since_recent_bc_dlq', 'mths_since_recent_inq', 'mths_since_recent_revol_delinq', 'num_accts_ever_120_pd','num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats','num_bc_tl','num_il_tl','num_op_rev_tl','num_rev_accts','num_rev_tl_bal_gt_0',		'num_sats',	'num_tl_120dpd_2m','num_tl_30dpd','num_tl_90g_dpd_24m',	'num_tl_op_past_12m',	'pct_tl_nvr_dlq','percent_bc_gt_75','tot_hi_cred_lim','total_bal_ex_mort','total_bc_limit',	'total_il_high_credit_limit'], axis =1)

"""
##From the ProfileReport it was also seen that some of the attributes have
*   NaN + missing values as can be seen below

So these attributes were also removed and the number of attributes have now reduced from 111 to 45.



"""

print('df_re[collections_12_mths_ex_med].unique()')
print(df_re['collections_12_mths_ex_med'].unique())
print('\n')
print('df_re[chargeoff_within_12_mths].unique()')
print(df_re['chargeoff_within_12_mths'].unique())
print('\n')
print('df_re[tax_liens].unique()')
print(df_re['tax_liens'].unique())
df_re = df_re.drop(['collections_12_mths_ex_med','chargeoff_within_12_mths','tax_liens'], axis= 1)
print('\n')
print('df_re.shape = ', df_re.shape)

"""#Creating and saving the ProfileReport of the **reduced** dataframe 

"""

profile_re = pp.ProfileReport(df_re, title = 'Loan_dataset', html = {'style': {'full_width': True}})
profile_re.to_notebook_iframe()
profile_re.to_file(output_file = 'Loan_dataset_re.html')

df_re.to_csv('cleaned_dataset.csv',index=False)

"""#Using python to reduce the dataset instead of analyzing ProfileReport"""

df_co = pd.read_csv('/content/loan_train.csv', low_memory=False)
df_co.isnull().sum()
df_co = df_co[(df_co['loan_status'] == 'Fully Paid') | (df_co['loan_status'] == 'Charged Off')]
mapping_dict = {'loan_status':{'Fully Paid':1,'Charged Off': 0}}
df_co = df_co.replace(mapping_dict)
df_co.loan_status.value_counts()

df_co.shape

drop_columns = []

for col in df_co.columns:
    non_null = df_co[col].dropna()
    unique_non_null = non_null.unique()
    num_true_unique = len(unique_non_null)
    if num_true_unique < 2:
        drop_columns.append(col)
        
df_co = df_co.drop(drop_columns, axis=1)
drop_columns

df_co = df_co.drop([ 'id','member_id','url'], axis= 1)

df_co.shape

df_re.columns

df_co.columns

"""# Desc of attributes
##emp_title
Job title.

##emp_length 
Number of years in the job, rounded down. If longer than 10 years, then this is represented by the value 10.

##state
Two-letter state code.

##home_ownership
The ownership status of the applicant's residence.

##annual_income
Annual income.

##verified_income
Type of verification of the applicant's income.

##debt_to_income
Debt-to-income ratio.

##annual_income_joint
If this is a joint application, then the annual income of the two parties applying.

##verification_income_joint
Type of verification of the joint income.

##debt_to_income_joint
Debt-to-income ratio for the two parties.

##delinq_2y
Delinquencies on lines of credit in the last 2 years.

##months_since_last_delinq
Months since the last delinquency.

##earliest_credit_line
Year of the applicant's earliest line of credit

##inquiries_last_12m
Inquiries into the applicant's credit during the last 12 months.

##total_credit_lines
Total number of credit lines in this applicant's credit history.

##open_credit_lines
Number of currently open lines of credit.

##total_credit_limit
Total available credit, e.g. if only credit cards, then the total of all the credit limits. This excludes a mortgage.

##total_credit_utilized
Total credit balance, excluding a mortgage.

##num_collections_last_12m
Number of collections in the last 12 months. This excludes medical collections.

##num_historical_failed_to_pay
The number of derogatory public records, which roughly means the number of times the applicant failed to pay.

##months_since_90d_late
Months since the last time the applicant was 90 days late on a payment.

##current_accounts_delinq
Number of accounts where the applicant is currently delinquent.

##total_collection_amount_ever
The total amount that the applicant has had against them in collections.

##current_installment_accounts
Number of installment accounts, which are (roughly) accounts with a fixed payment amount and period. A typical example might be a 36-month car loan.

##accounts_opened_24m
Number of new lines of credit opened in the last 24 months.

##months_since_last_credit_inquiry
Number of months since the last credit inquiry on this applicant.

##num_satisfactory_accounts
Number of satisfactory accounts.

##num_accounts_120d_past_due
Number of current accounts that are 120 days past due.

##num_accounts_30d_past_due
Number of current accounts that are 30 days past due.

##num_active_debit_accounts
Number of currently active bank cards.

##total_debit_limit
Total of all bank card limits.

##num_total_cc_accounts
Total number of credit card accounts in the applicant's history.

##num_open_cc_accounts
Total number of currently open credit card accounts.

##num_cc_carrying_balance
Number of credit cards that are carrying a balance.

##num_mort_accounts
Number of mortgage accounts.

##account_never_delinq_percent
Percent of all lines of credit where the applicant was never delinquent.

##tax_liens
a numeric vector

##public_record_bankrupt
Number of bankruptcies listed in the public record for this applicant.

##loan_purpose
The category for the purpose of the loan.

##application_type
The type of application: either individual or joint.

##loan_amount
The amount of the loan the applicant received.

##term
The number of months of the loan the applicant received.

##interest_rate
Interest rate of the loan the applicant received.

##installment
Monthly payment for the loan the applicant received.

##grade
Grade associated with the loan.

##sub_grade
Detailed grade associated with the loan.

##issue_month
Month the loan was issued.

##loan_status
Status of the loan.

##initial_listing_status
Initial listing status of the loan. (I think this has to do with whether the lender provided the entire loan or if the loan is across multiple lenders.)

##disbursement_method
Dispersement method of the loan.

##balance
Current balance on the loan.

##paid_total
Total that has been paid on the loan by the applicant.

##paid_principal
The difference between the original loan amount and the current balance on the loan.

##paid_interest
The amount of interest paid so far by the applicant.

##paid_late_fees 
Late fees paid by the applicant.
"""

X = my_dataset.iloc[:, :-1].values 
y = my_dataset.iloc[:, -1].values